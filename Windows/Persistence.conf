"description": "ATT&CK: Persistence TA0003",
"queries": {
    "Hidden Scheduled Tasks Monitoring": {
        "query": "SELECT st.name, st.action, st.path, st.enabled, st.state, st.last_run_time, st.next_run_time, st.last_run_code FROM scheduled_tasks st WHERE st.path NOT LIKE "\Microsoft\Windows%" AND st.hidden=1;",
        "description": "Retrieves hidden scheduled tasks running on the host that are not related to Windows.",
        "platform": "windows",
        "removed": false
        },
    "Internet Explorer Extensions": {
        "query": "SELECT ie.name, ie.registry_path, ie.version, ie.path FROM ie_extensions ie WHERE ie.name LIKE (SELECT v FROM __vars WHERE n="ie_extension_name") AND ie.path LIKE (SELECT v FROM __vars WHERE n="ie_extension_path");",
        "description": "Retreives data on Internet Explorer (IE) extensions based on the pattern specified.",
        "platform": "windows",
            "snapshot": true
        },
    "Firefox Addons": {
        "query": "SELECT u.username, f.name, f.identifier, f.creator, f.type, f.version, f.description, f.source_url, CASE f.visible WHEN "1" THEN "Addon is shown in browser" ELSE "Addon is not shown is browser" END "visible", CASE f.active WHEN "1" THEN "Addon is active" ELSE "Addon is not active" END "active", CASE f.disabled WHEN "1" THEN "Application-disabled" ELSE "Not application-disabled" END "disabled", CASE f.autoupdate WHEN "1" THEN "Addon applies background updates" ELSE "Addon does not apply background updates" END "autoupdate", CASE f.native WHEN "1" THEN "Addon includes binary components" ELSE "Addon does not include binary components" END "native", f.location, f.path FROM users u CROSS JOIN firefox_addons f USING (uid) WHERE u.username LIKE regex_match(u.username, (SELECT v FROM __vars WHERE n = "username_pattern"), 0) AND f.name LIKE regex_match(f.name, (SELECT v FROM __vars WHERE n = "name_pattern"), 0);",
        "description": "Retreives Firefox addons installed on the host.",
        "platform": "windows",
            "snapshot": true
        },
    "Chrome Browser Extensions ": {
        "query": "SELECT u.username, ce.name, ce.identifier, ce.version, ce.description, ce.locale, ce.update_url, ce.persistent, ce.path FROM users u CROSS JOIN chrome_extensions ce USING (uid);",
        "description": "Returns data on the chrome extensions installed on the host for a particular user. ",
        "platform": "windows",
            "snapshot": true
        },
    "Driver Loaded Windows Event Logs ": {
        "query": "SELECT datetime, regex_match(data, 'ImagePath":"(.*)","ServiceType":', 1) as image_path, data FROM windows_eventlog WHERE channel = "System" AND eventid = 7045 AND image_path LIKE "%.sys%" AND datetime LIKE regex_match(datetime, (SELECT v FROM __vars WHERE n = "datetime_pattern"), 0);",
        "description": "Retrieves Windows events related to driver being loaded on the host. ",
        "platform": "windows",
        "snapshot": true
        },
    "Batch File Default Behavior ": {
        "query": "SELECT key, path, name, data, datetime(mtime, "unixepoch", "UTC") as last_modified FROM registry WHERE (key LIKE "HKEY_LOCAL_MACHINE\SOFTWARE\Classes\.bat\PersistentHandler" OR key LIKE "HKEY_USERS\%\SOFTWARE\Classes\.bat\PersistentHandler") AND (data <> "{5e941d80-bf96-11cd-b579-08002b30bfeb}");",
        "description": "Retrieves systems where .bat file association is no longer set to default cmd.exe.",
        "platform": "windows",
        "snapshot": true
        },
     "Application Shims ": {
        "query": "SELECT apps.executable, h.sha256, apps.path, apps.description, datetime(apps.install_time,"unixepoch", "UTC") AS install_time, apps.sdb_id FROM appcompat_shims apps LEFT JOIN hash h ON h.path=apps.path;",
        "description": "Returns information on shims installed on the system ",
        "platform": "windows",
        "snapshot": true
        },
     "Microsoft Office Macros Registry Keys ": {
        "query": "SELECT key AS reg_key, path, name, data, DATETIME(mtime, "unixepoch", "UTC") as last_modified FROM registry WHERE key LIKE "HKEY_USERS\%\Software\Policies\Microsoft\office\%\%\security" AND (name LIKE "EnableUnsafeClientMailRules" AND data IN ("1", "0x00000001")) OR (name LIKE "BlockContentExecutionFromInternet" AND data IN ("0", "0x00000000"));",
        "description": "retrieves hosts where registry key "BlockContentExecutionFromInternet" was set to 0 therefore enabling macro execution on the host or where registry key "EnableUnsafeClientMailRules" was set to 1 which enables rule actions for starting an application or running a macro2",
        "platform": "windows",
        "snapshot": true
        },
    "Registry Network Shares ": {
        "query": "SELECT key AS reg_key, path, name, data, datetime(mtime, "unixepoch", "UTC") AS last_modified FROM registry WHERE key LIKE "HKEY_USERS\%\Network\%";",
        "description": "Retrieves registry data on the system current mapped network drives.",
        "platform": "windows",
        "snapshot": true
        },
    "Registry Key BootExecute ": {
        "query": "SELECT key AS reg_key, path, name, data, datetime(mtime, "unixepoch", "UTC") AS last_modified FROM registry WHERE (key LIKE "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager" OR key LIKE "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet%\Control\Session Manager") AND name LIKE "BootExecute";",
        "description": "retrieves data stored in the BootExecute registry key",
        "platform": "windows",
        "snapshot": true
        },
    "Registry Firewall Exception": {
        "query": "SELECT key AS reg_key, path, name, data, datetime(mtime, "unixepoch", "UTC") AS last_modified FROM registry WHERE key LIKE "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\%Profile" AND name LIKE "DoNotAllowExceptions" AND data NOT LIKE "0";",
        "description": "Returns information on registry key if "Do not allow exceptions" policy setting for Windows Firewall was enabled.",
        "platform": "windows",
        "snapshot": true
        },
    "PowerShell Profiles Files": {
        "query": "SELECT f.path, f.filename, h.sha256, f.uid, f.gid, f.mode, f.size, DATETIME(f.atime, "unixepoch","UTC") AS last_access_time, DATETIME(f.mtime, "unixepoch", "UTC") AS last_modified, DATETIME(f.ctime, "unixepoch", "UTC") AS last_status_change_time, DATETIME(f.btime, "unixepoch", "UTC") AS creation_time, f.type FROM file f LEFT JOIN hash h ON f.path=h.path WHERE ( f.path LIKE "C:\Windows\System32\WindowsPowerShell\%%" OR f.path LIKE "C:\Users\%\Documents\%%") AND f.filename LIKE "%profile.ps1" AND f.path NOT LIKE "C:\Windows\System32\WindowsPowerShell\v1.0\Examples\profile.ps1";",
        "description": "Retrieves data for existing PowerShell profiles on the system. Any changes to these profiles should be investigated.",
        "platform": "Windows",
        "snapshot": true
    }